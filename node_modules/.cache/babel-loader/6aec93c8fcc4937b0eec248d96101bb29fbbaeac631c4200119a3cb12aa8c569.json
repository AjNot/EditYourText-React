{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/Personel/React/texteditor/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const Upfunction = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const toLower = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n  const clearText = () => {\n    let newText = '';\n    setText(newText);\n  };\n  const capitalizeFirstLetter = () => {\n    let newText = text.split(' ').map(word => {\n      if (word.length > 0) {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n      } else {\n        return '';\n      }\n    }).join(' ');\n    setText(newText);\n  };\n  const reverseText = () => {\n    let newText = text.split('').reverse().join('');\n    setText(newText);\n  };\n  const countOccurrences = searchTerm => {\n    const regex = new RegExp(searchTerm, 'g');\n    const count = (text.match(regex) || []).length;\n    console.log(`\"${searchTerm}\" appears ${count} times in the text.`);\n  };\n  const removeExtraSpaces = () => {\n    let newText = text.replace(/\\s+/g, ' ');\n    setText(newText);\n  };\n  const handleonChange = event => {\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter Text here');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [props.Heading, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            style: {\n              backgroundColor: props.mode === 'dark' ? 'black' : 'white',\n              color: props.mode === 'dark' ? 'white' : 'black'\n            },\n            value: text,\n            onChange: handleonChange,\n            id: \"MyText\",\n            rows: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} my-2 mx-1`,\n          onClick: Upfunction,\n          children: \"Upper Case\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n          onClick: toLower,\n          children: \"Lower Case\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n          onClick: capitalizeFirstLetter,\n          children: \"Capitalize First Letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n          onClick: reverseText,\n          children: \"Reverse Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n          onClick: () => countOccurrences('your_word_here'),\n          children: \"Count Occurrences\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n          onClick: removeExtraSpaces,\n          children: \"Remove Extra Spaces\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`,\n          onClick: clearText,\n          children: \"Clear Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Text Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(' ').filter(element => element.length !== 0).length, \" words \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [0.008 * text.split(' ').length, \" minutes to read\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text.length > 0 ? text : 'Enter your text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"TUiRJmcbhcp7P4PI3DKN+vF0dRY=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","Upfunction","newText","text","toUpperCase","setText","toLower","toLowerCase","clearText","capitalizeFirstLetter","split","map","word","length","charAt","slice","join","reverseText","reverse","countOccurrences","searchTerm","regex","RegExp","count","match","console","log","removeExtraSpaces","replace","handleonChange","event","target","value","children","className","style","color","mode","Heading","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","onChange","id","rows","onClick","filter","element","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/Personel/React/texteditor/src/components/TextForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function TextForm(props) {\n  const Upfunction = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const toLower = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const clearText = () => {\n    let newText = '';\n    setText(newText);\n  };\n\n  const capitalizeFirstLetter = () => {\n    let newText = text\n      .split(' ')\n      .map((word) => {\n        if (word.length > 0) {\n          return word.charAt(0).toUpperCase() + word.slice(1);\n        } else {\n          return '';\n        }\n      })\n      .join(' ');\n    setText(newText);\n  };\n\n  const reverseText = () => {\n    let newText = text.split('').reverse().join('');\n    setText(newText);\n  };\n\n  const countOccurrences = (searchTerm) => {\n    const regex = new RegExp(searchTerm, 'g');\n    const count = (text.match(regex) || []).length;\n    console.log(`\"${searchTerm}\" appears ${count} times in the text.`);\n  };\n\n  const removeExtraSpaces = () => {\n    let newText = text.replace(/\\s+/g, ' ');\n    setText(newText);\n  };\n\n  const handleonChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const [text, setText] = useState('Enter Text here');\n\n  return (\n    <>\n      <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n        <div>\n          <h1>{props.Heading} </h1>\n          <div className=\"mb-3\">\n            <textarea\n              className=\"form-control\"\n              style={{ backgroundColor: props.mode === 'dark' ? 'black' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }}\n              value={text}\n              onChange={handleonChange}\n              id=\"MyText\"\n              rows=\"8\"\n            ></textarea>\n          </div>\n          <button className={`btn btn-${props.mode === 'light' ? 'primary' : 'light'} my-2 mx-1`} onClick={Upfunction}>\n            Upper Case\n          </button>\n          <button className={`btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`} onClick={toLower}>\n            Lower Case\n          </button>\n          <button className={`btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`} onClick={capitalizeFirstLetter}>\n            Capitalize First Letter\n          </button>\n          <button className={`btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`} onClick={reverseText}>\n            Reverse Text\n          </button>\n          <button className={`btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`} onClick={() => countOccurrences('your_word_here')}>\n            Count Occurrences\n          </button>\n          <button className={`btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`} onClick={removeExtraSpaces}>\n            Remove Extra Spaces\n          </button>\n          <button className={`btn btn-${props.mode === 'light' ? 'primary' : 'light'} mx-1 my-1`} onClick={clearText}>\n            Clear Text\n          </button>\n        </div>\n      </div>\n      <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\n        <h1>Text Summary</h1>\n        <p>{text.split(' ').filter((element) => element.length !== 0).length} words {text.length} characters</p>\n        <h3>Preview</h3>\n        <p>{0.008 * text.split(' ').length} minutes to read</p>\n        <p>{text.length > 0 ? text : 'Enter your text'}</p>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}